/*
 * Copyright (c) 2011 Rudolf Polzer
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
#ifndef INTERPOLATE_H
#define INTERPOLATE_H

.int iflags;
const int IFLAG_VELOCITY = 1;
const int IFLAG_ANGLES = 2;
const int IFLAG_AUTOANGLES = 4;
const int IFLAG_VALID = 8;
const int IFLAG_PREVALID = 16;
const int IFLAG_TELEPORTED = 32;
const int IFLAG_AUTOVELOCITY = 64;
const int IFLAG_V_ANGLE = 128;
const int IFLAG_V_ANGLE_X = 256;
const int IFLAG_ORIGIN = 512;
#define IFLAG_INTERNALMASK (IFLAG_VALID | IFLAG_PREVALID)

// call this BEFORE reading an entity update
void InterpolateOrigin_Undo();

// call this AFTER receiving an entity update
void InterpolateOrigin_Note();

// call this when the entity got teleported, before InterpolateOrigin_Note
void InterpolateOrigin_Reset();

// call this BEFORE drawing
void InterpolateOrigin_Do();

// in case we interpolate that:
.vector v_angle;
#endif
