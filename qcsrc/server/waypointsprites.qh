#ifndef SERVER_WAYPOINTSPRITES_H
#define SERVER_WAYPOINTSPRITES_H

..entity owned_by_field;
.float rule;
.string model1;
.string model2;
.string model3;

.float(entity) waypointsprite_visible_for_player;

void WaypointSprite_UpdateSprites(entity e, string m1, string m2, string m3);

void WaypointSprite_UpdateHealth(entity e, float f);

void WaypointSprite_UpdateMaxHealth(entity e, float f);

void WaypointSprite_UpdateBuildFinished(entity e, float f);

void WaypointSprite_UpdateOrigin(entity e, vector o);

void WaypointSprite_UpdateRule(entity e, float t, float r);

void WaypointSprite_UpdateTeamRadar(entity e, float icon, vector col);

.float waypointsprite_pingtime;
.float waypointsprite_helpmetime;
void WaypointSprite_Ping(entity e);

float waypointsprite_limitedrange, waypointsprite_deployed_lifetime, waypointsprite_deadlifetime;

void WaypointSprite_HelpMePing(entity e);

void WaypointSprite_FadeOutIn(entity e, float t);

void WaypointSprite_Init();
void WaypointSprite_InitClient(entity e);

void WaypointSprite_Kill(entity wp);

void WaypointSprite_Disown(entity wp, float fadetime);

void WaypointSprite_Think();

float WaypointSprite_visible_for_player(entity e);

entity WaypointSprite_getviewentity(entity e);

float WaypointSprite_isteammate(entity e, entity e2);

float WaypointSprite_Customize();

float WaypointSprite_SendEntity(entity to, float sendflags);

void WaypointSprite_Reset();

entity WaypointSprite_Spawn(
	string spr, // sprite
	float lifetime, float maxdistance, // lifetime, max distance
	entity ref, vector ofs, // position
	entity showto, float t, // show to whom? Use a flag to indicate a team
	entity own, .entity ownfield, // remove when own gets killed
	float hideable, // true when it should be controlled by cl_hidewaypoints
	float icon, vector rgb // initial icon and color
);

entity WaypointSprite_SpawnFixed(
	string spr,
	vector ofs,
	entity own,
	.entity ownfield,
	float icon, vector rgb // initial icon and color
);

.entity waypointsprite_deployed_fixed;
entity WaypointSprite_DeployFixed(
	string spr,
	float limited_range,
	vector ofs,
	float icon, vector rgb // initial icon and color
);

.entity waypointsprite_deployed_personal;
entity WaypointSprite_DeployPersonal(
	string spr,
	vector ofs,
	float icon, vector rgb // initial icon and color
);

.entity waypointsprite_attached;
.entity waypointsprite_attachedforcarrier;
entity WaypointSprite_Attach(
	string spr,
	float limited_range,
	float icon, vector rgb // initial icon and color
);

entity WaypointSprite_AttachCarrier(
	string spr,
	entity carrier,
	float icon, vector rgb // initial icon and color
);

void WaypointSprite_DetachCarrier(entity carrier);

void WaypointSprite_ClearPersonal();

void WaypointSprite_ClearOwned();

void WaypointSprite_PlayerDead();

void WaypointSprite_PlayerGone();
#endif
